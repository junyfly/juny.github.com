<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[炒米研究院]]></title>
  <link href="http://junyfly.github.io/atom.xml" rel="self"/>
  <link href="http://junyfly.github.io/"/>
  <updated>2016-06-16T17:41:57+08:00</updated>
  <id>http://junyfly.github.io/</id>
  <author>
    <name><![CDATA[吴俊宜]]></name>
    <email><![CDATA[junflyappwill@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[产品运营之App推送]]></title>
    <link href="http://junyfly.github.io/chan-pin-yun-ying-zhi-apptui-song.html"/>
    <updated>2014-01-18T14:55:17+08:00</updated>
    <id>http://junyfly.github.io/chan-pin-yun-ying-zhi-apptui-song</id>
    <content type="html"><![CDATA[<p><img src="http://junyfly.github.io/images/2014/01/icon.png"></p>

<blockquote><p>推送是移动产品运营中活跃用户的一个重要手段，可以提高唤醒不常使用的用户。推送可以实现诸如App升级消息，通知消息，提醒用户使用，以及推荐内容等
利用好是一把利器，利用不好反而损伤用户体验。因此，把握好推送的节奏就显得非常重要。</p></blockquote>

<!-- more -->


<h3>选择适当的推送时间</h3>

<p>无论是推送何种消息，首先要考虑的就是推送的时间。随意推送的话可能会严重影响到推送效果，比如在晚上11点之后
推送，对用户来说一种侵犯。当然很少有应用会这么做，除非是特殊情况，比如赛事直播提醒。而接下来要考虑的是不同时间段的效果。
移动端用户的使用场景是在不断变化的。比如上班族，有三个时间段比较适合推送。上午8-10点，使用场景在公交、地铁或自驾车上。乘坐公共交通工具的人，
会利用这段时间用手机阅读一些新闻或者书籍。
这时推送效果会比较好。（此条规则不适用于帝都，大家都忙于挤公交地铁）
中午12-13点，使用场景在餐厅。茶余饭后饭中都抱着手机已经成为大家的一种习惯。对于上班族来说，中午吃个快餐玩手机是一件比较惬意的事情，这时推送效果也会
不错。最后就是晚上19-22点，使用场景在家里。一般情况下，在这个时间段的推送被用户看到并打开的机会是最大的。</p>

<p>在以上三个时间发推送是大部分App都符合的。这与我之前参与运营的几种类型App实操过程是相符合的。在最开始的时候，各个时间段都尝试了，后来选择了晚上。
从监测的数据看，早上打开的人数较少，中午稍微多一些，而到晚上则有较大的提升。当时，我们严控推送，每天只推送一次，推送的内容以及文案都要再三推敲。
从推送效果以及养成用户习惯的角度出发，往后的大部分推送都在晚上那个时间段进行。以至于我离开上家公司近一年，现在到晚上都会等着那个推送到来。</p>

<p>还有一点，iOS推送都是要经过苹果的推送服务器的，所以推送时间并不稳定，需要结合实际情况作出一定的调整。同时受时效限制的内容推送可以自由推送，但前提是不能扰民。</p>

<h3>精心选择推送的内容和文案</h3>

<p>最近某度的某图的推送恶心到人了，一个工具类应用的推送竟然到了无下限的地步，在我一定时间没有打开应用它就会推送一条消息，出现的字眼净是臣妾云云。这样低俗化内容严重影响
了我的心情。当然可能会有人喜欢，但是对于一个应用来说尊重用户是要达到的基本原则，推送的内容低俗就是对用户的不敬。对于内容选择可以是当下的热点或者是结合用户兴趣特点的
内容，做大前一点不难，而后面一点就需要数据的积累了。</p>

<p>推送到iPhone或者iPad的时候首先是在锁屏上显示一条推送消息，这段推送语将直接影响用户是否打开这条推送。而精心推敲和选择是非常必要的，比如是否加上emoji，要固定成卖萌还是
严谨的风格。这些都是要结合不同应用的推送经验来慢慢形成的。</p>

<h3>其它的一些影响因素</h3>

<p>推送的声音也是一个不可忽略的因素，从选择推送铃声开始就已经决定了你推送的质量，选择一个特别但又悦耳的铃声是一个不错的选择。同时也要考虑什么时候开声音推送，什么时候不开。
这些在设计推送的时候就要考虑进去的。</p>

<p>显示的气泡是一个比较有意思的东西.有一次我们一个产品升级的时候，在添加消息中心的时候出现了一个bug。用户在打开消息之后应用图标角上的数字气泡去不掉。从反馈中看到用户骂声
一片片。对于我这样有强迫症的人来说，气泡消不掉是很碍眼的。这是用户习得尊重。在后面的版本修改错误之后，同时做了一个小改动。无论有多少未读消息，都只会显示1。</p>

<p>每一次推送也没有必要所有用户都推送，适当的内容就推送给适当的人群。比如说一个App分为注册用户，非注册用户等用户角色。这时候推送的内容就可以按不同的用户角色选择。毫无目的
的全部推送是耍流氓。</p>

<h3>没有完美的推送方法，只有用心的推送</h3>

<p>做好推送的数据统计，结合App用户PV曲线以及其的反馈来逐步改善推送方法才是最佳的方法。这不仅需要细心还需要用心，细心标示你关注到点了，但是没有在后续的运营中加以利用。
而对用户上心，努力完善每一个环节定才有可能赢得用户的心。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从运营商赠送流量的运营手段看用户习惯的养成]]></title>
    <link href="http://junyfly.github.io/yong-hu-xi-guan-de-yang-cheng.html"/>
    <updated>2014-01-18T01:27:16+08:00</updated>
    <id>http://junyfly.github.io/yong-hu-xi-guan-de-yang-cheng</id>
    <content type="html"><![CDATA[<blockquote><p>昨天手机收到一条手机流量套餐使用情况的短信，300M流量两个星期就消耗殆尽。这让从来没有流量危机的我为之一颤，说清无惧流量都是被联通惯坏的。
这事儿得从三个月前土豪联通开始每月送1G流量说起。</p></blockquote>

<h3>增送大量流量培养用户大流量使用习惯</h3>

<p>三个月前的某天，也是土豪联通发来的短息，说只要使用完当月套餐即可在次月获赠1G流量。一直没太在乎这件事儿，到次月的时候该死的土豪通兑现了送流量之事。以此类推，
下月也可获赠流量。加上原有流量套餐，手机流量达到前所未有的高度———1300M
为了下月还能获赠，就得努力把这流量全用完。这下子让用惯用惯了小流量包的屌丝瞬间变土豪，且看如何使用3G网络。</p>

<!-- more -->


<ul>
<li>手机全天候开3G网络（无惧耗电）</li>
<li>下载应用使用3G网络</li>
<li>下载音乐使用3G网络</li>
<li>公交地铁看视频用3G网络</li>
<li>嫌弃公司网络慢分享3G给电脑</li>
<li>微博、微信无限刷新</li>
<li>&hellip;&hellip;.（种种土豪行径）</li>
</ul>


<p>又到了次月，联通兑现了&hellip;</p>

<p>又到了次月，联通还是兑现了&hellip;</p>

<p>在前天收到短信说流量用完的时候，那是无比的震惊。生怕回到以前屌丝情景，在联通的温馨提示下，发送了“&amp;*%￥&amp;”到10010 购买300M流量包。一切来得那么自然，毫无违和感。
购买新流量包的同时，已经完全调入联通预设好的云营销陷阱了，且看分析。</p>

<p>首先联通通过赠送大流量包给用户，这已经取悦了用户。获赠这个大流量包的前提就是要使用完本月的，才可在次月获得。这是非常重要的前提，它提示你要用完，这个用完才是重点。
通常为了那么多的流量，我们屌丝是抵挡不住诱惑的，肯定会想办法用完当月流量。而实际情况可能是很多人，不用刻意使用都能能获赠，现在流量太不经用了（TT）</p>

<p>而在获赠大流量包之后要使用完，就得刻意了。这个时候就出现了上述说的，装逼使用方式。再过一个月，再过下个月。三个月之后慢慢就习惯了那样的使用方式。也就是说开始习惯了
大流量包了。在联通停止赠送之后，将会继续按着1300M的方式使用流量。等到你发现流量没几天就耗完了，接着再购买了流量包。至此联通此处的运营目的就达到了。</p>

<p>对于运营商来说，这是一种非常低成本的营销手段，流量对于运营商来说根本不需要付出额外的成本。而且还可以讨好用户，同时还可能获得一定的口碑传播，不可否认，我确实将联通
送1G流量的故事在朋友圈广为传播。</p>

<p>最后才发现，这是一个哀伤的故事&hellip;</p>

<h3>会员体验到付费续费</h3>

<p>付费购买服务是多部分都难以接受的事情，为此国内很多视频网站都过得异常艰辛，砸了巨资买版权缺用户却不愿意花钱购买服务。这对搜狐、爱奇艺等视频网站来说是一件哀伤的事情。
不仅是视频网站，还有很多同类的优秀的互联网产品在提供付费服务，遭遇同样的窘境。不过事情总是有转机的，在我体验了会员之后，对会员着迷了。</p>

<p>迅雷是非常理想的下载工具，在次之前没有使用过任何的会员功能，比如离线下载，高速通道，云播等可以大大节省时间的功能。上个月花了15块钱买了迅雷会员，就为了看一部电影
（注意，此处不讨论盗版问题）这次钱没白花，直接看云播很流畅，连下载的时间都可以省去，陆陆续续下载了很多东西。这真让人着迷，为此今天又花钱续费了。</p>

<p>以前看在线看视频，习惯打开目标视频网页去上个厕所再回来。直到在某度的朋友送了12个月的爱奇艺会员之后才大有改观。会员可以去广告，看VIP电影，最爽的是可以有相对最好
画质体验和带宽保证。这刷新了我爱奇艺带宽不够的说法，原来是藏着留给会员用了。而相比之下，之前的最爱搜狐视频，却要让我忍受60秒的广告，现在看来这真的不可接受。</p>

<p>无论是运营商有的赠送流量，或是我主动购买迅雷会员服务，还是被动接受会员服务。这些都是一种使用习惯的养成。当这个适应期足够长，将会改变彻底让用户去适应一种新的体验，
哪怕是需要继续付费。</p>

<h3>事情总是有转机，花点成本去培养用户习惯就好</h3>

<p>几乎所有付费软件都有试用期或者Lite版，实际付费购买完整版的用户比较少。一是有盗版，而是高级功能用户根本没法体体验到。而这种方式在运营商、视频网站，迅雷这样提供服务
型产品公司来说，可能会是一种不错的获取忠实用户的好方式，付学费让用户去学习习惯你的产品。</p>

<p>这么干的公司最近就有，虾米还就送了我一个月的会员，可以不限下载音乐，这也是一种美好的体验。当然QQ音乐已经让我习惯了，虾米并不能完全把我吸引过去。当然要是搜狐视频
搞一个幸运大转盘抽奖活动，奖品为1年，2年，3年至n年的会员期，我一定回去参加的，毕竟搜狐一直是真爱，只是现在有了新暧昧对象而已。</p>

<p>很多人说国内的付费习惯没有养成而已，等到养成了就好。那就多花点心思帮助用户尽快过渡到付费的习惯吧。付费体验高品质服务不是什么坏事儿！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装教程]]></title>
    <link href="http://junyfly.github.io/octopressan-zhuang-jiao-cheng.html"/>
    <updated>2014-01-03T13:44:31+08:00</updated>
    <id>http://junyfly.github.io/octopressan-zhuang-jiao-cheng</id>
    <content type="html"><![CDATA[<p><img src="http://farm3.staticflickr.com/2857/11725426803_2129e2abd8_h.jpg"></p>

<blockquote><p>Octopress 是一个非常轻量级的静态博客系统，其初衷是为码农专门设计的。
相比冗余的Wordpress系统，Octopress更适合用于码字，而不必在乎如何展现。
书写发布皆可在终端一气呵成，配合Markdown标记语言更是让页面美轮美奂。</p></blockquote>

<p>对于我这个伪Blogger来说，用什么都无所谓的。但是看到Octopress那迷人的简洁，
还是情不自禁的折腾起来，把搁置了半年多的博客重新拾起。下面就简单记录一下我的整个安装过程
任何的开源软件都会有非常健全的Documentation可以参考的，按理说无需重复造轮子。
不过关于Octopress的中文资料并不多，简单记录一下过程以做备忘。</p>

<!-- more -->


<h3>安装前的准备</h3>

<p>Mac先安装一个软件安装工具Homebrew，类似于dpkg 软件管理工具，有了它
mac下也能用命令行install软件,这里不赘述如何安装他了
<a href="https://github.com/Homebrew/homebrew">安装请看这里</a></p>

<p>octopress 是基于Jekyll的，集合了更多的插件和功能。Octopress的源码寄存于github
安装和更新都需要git这个工具，Mac和大多数Linux系统都自带有它，没有的自行安装即可。</p>

<p>Octopress需要有Ruby环境的支持，安装一个RVM来管理自己的Ruby版本。安装使用请看Rubychina的<a href="http://ruby-china.org/wiki/install_ruby_guide">wiki</a>
使用.</p>

<h3>开始安装Octopress</h3>

<p>找到一个合适的位置来Clone Octopress项目</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress   #从GitHub把octopress clone到本地octopress
cd octopress
</code></pre>

<p>安装Octopress环境</p>

<pre><code>gem install bundler  #在本地octopress 目录下执行
bundle install 
</code></pre>

<p>在这一步如果出现问题的话，按着报错的内容排错就可以了。如果bundle install 半天没反应的话，那就把ruby的镜像更换为淘宝国内的镜像。
具体方法参见<a href="http://ruby.taobao.org/">淘宝ruby镜像</a></p>

<p>到这里基本上就安装完成了，下面再安装一下默认的主题就可以review了。</p>

<pre><code>rake install #安装默认的主题，关于主题的更换以后再做讨论。
</code></pre>

<p>如果没有任何报错的话，那么再执行一个命令就可以看到你的octo博客了。</p>

<pre><code>rake preview #打开打开浏览器，输入http://localhost:4000 看看
ctrl+c #预览完了退出预览
</code></pre>

<p>哦了，程序猿的第一句话都是hello world的，那么下面就来说一下怎么发布hello world。</p>

<pre><code>rake new_post['title'] #新建一个文章，将标题更换为你喜欢的标题
vim source/_post #新建Markdown 文件就都会存储在这里 用你喜欢的编辑器编辑呗
</code></pre>

<p>输入你想要的内容，然后保存退出。Markdown 语法请参考这里<a href="http://wowubuntu.com/markdown/">Markdown 语法</a>
接下来就是要将Markdown 文件生成html 静态网页，这就是jekll的作用了，还是一句命令就了事。</p>

<pre><code>rake generate #生成静态页面
rake preview #打开自带的服务器，在本地预览 http://localhost:4000
</code></pre>

<p>如果你能看到你的页面，那么恭喜你，成功了。</p>

<hr />

<p>有时间，再详细补充一下安装过程和配置过程</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从这里开始]]></title>
    <link href="http://junyfly.github.io/cong-zhe-li-kai-shi.html"/>
    <updated>2013-12-30T18:21:13+08:00</updated>
    <id>http://junyfly.github.io/cong-zhe-li-kai-shi</id>
    <content type="html"><![CDATA[<p><img src="http://farm3.staticflickr.com/2855/11725336295_4a240c65f6_c.jpg"></p>

<pre><code>是的，我有了个人博客。拥有个人网站是我一直以来的一个愿望，在前两个星期我实现了。今天写些文字来纪念它的诞生，并
且简单回它的由来。博客的诞生主要有两个原因。
</code></pre>

<p>由来已久的愿望。这个得从很久以前谈起，之前喜好读一些书，看一些电影，偶尔有些想法。有想法就得记录下来。
可以写日记，写博客，写微博种种。现成的一抓一大把。但是总觉的那样做写出来的东西不属于自己。
其次，每每看到别人挂着个人域名的博客就相当的羡慕，就冲着满足一下自己小小的虚荣心，我也会把这个博客弄出来的。
碍着技术匮乏迟迟没能自己做出来，这也是拖延至今的重要</p>

<p>学习编程技术，简单的说就是想学习php。本博客自然用的Wordpress，而它是用php写，正好可以练手。
学习php也有一个时机因素。我是重度拖延正患者，而且不爱分轻重。说好要学习点编程技术，一直拖到现在。
为什么现在就愿意学了呢？。对！你猜对了！这段时间我很无聊！从北京结束实习回来，吊儿郎当无所事事。
面临毕业就业的压力，丝毫没有动力。这个时候就是逼自己的最佳时机了。</p>

<!-- more -->


<h3>在新浪SAE折腾</h3>

<p>想到光是看书肯定学不了什么技术，非得实操才行。在了解了php的一些基础之后便开始有做博客的想法。
最开始是用的新浪的SAE，免费的！域名用的是.tk, 免费的！不花钱就可以有自己的个人博客。
SAE安装Wordpress相当简单，傻瓜式操作，一键安装。在调试主题期间我就吃尽苦头，访问相当慢！
问题不是出在服务器配置上，而是输入带宽超小！实在无法忍受。TK域名在国内也不受待见，搜索引擎对其极不友好。
罢了，免费的午餐不好吃。</p>

<p>不过，我还是认为公有云是重要的趋势，随着各家慢慢的发展。期间还申请试用了阿里云服务器，
不过后台相当简陋，跟Linode比起来落了一大截。扯远了，回到正题。Wordpress挂在SAE期间，帮助我完成了重要的一件事情，
定制主题。在网上找了几款简单的主题，最后相中了Wite_Clean。真是简单极了。这非常符合我的预期，接下来就将对其进行改造。</p>

<p>原来实习的公司，是一年轻的移动互联网创业公司。在那里我培养了我对移动互联网以及对移动产品的兴趣。
无奈水平实在有限，而无法去寻得一个和产品相关的职位。唯有自己YY，这个博客就是我的处女座！
我首先想到的也是我目前力所能及的，就是对Wordpress主题进行改造。
恰好，有点html+css基础，加上最近混的PHP大概可以处理。
事情进展也比较顺利，花了一个星期的时间改造主题，对主题的外观彻底改造，成来现在看到的这样子。</p>

<h4>主要做了如下调整</h4>

<ul>
<li>统一字体，字号，背景，链接样式</li>
<li>改变布局大小，去除Single Page 的 Sider Bar</li>
<li>增加显示页码的主页翻页功能</li>
<li>增加查看上下篇文章功能 5Sider链如豆瓣等信息</li>
<li>一些细节的修改 7目前Chrome，Firefox，Safari显示正常，IE显示不了边框CSS阴影daddy</li>
<li>得空还要继续改进</li>
</ul>


<p>本着尽量简单的原则，那些可以系自己写入代码的功能就尽量不用插件，目前启用了WPtoch(手机友好主题)，
LightBox2（图片显示JS插件）。修改主题的时间其实大部分都耗在细节和样式以及等待SAE上了。
新加的几个涉及到PHP的都是在网上找的代码再加以调整就可用。在SAE上的折腾也仅限于此。</p>

<h3>在Linode VPS折腾</h3>

<p>想到tk域名的境遇，以及种种限制果断放弃。想到SAE的鸡肋和限制也果断放弃，当然其中的某些功能还是要继续使用，比如Storage。
在Godaddy注册了me域名还顺带买了打折的net域名。顺手把net域名挂到DNSPOD解析，据说不错，
曾经我把TK域名挂到DNSPOD解析的时候还被收回。TK注册商还发了一大使用限制到我邮箱解析为什么被收回，英文的，果断不看。</p>

<p>到哪里host wordpress就成了最后一个问题，国外主机便宜好用，但是隔着一堵墙。所以就有上面说的试用阿里云的那一回事了。
就我这一po博客，访问量几乎为零，还在乎这个干啥？鄙人深受速度之害，深知不能误人时间这等于谋害斯生命。
一怒之下弄了个有口皆碑的Linode VPS，最低当配置。8核cpu，1G内存，2000G/mo的流量。确实有点奢侈，这也够我装逼了。
独立主机呀！像极了自己的主机。随意rebuild，任我催残害。Linux小白菜开始要做小小站长，想到这里就窃喜。</p>

<p>想来容易，做来难。在biuld VPS系统时，选择了稍稍有点了解的Ubuntu号称全球最流行的免费系统，又扯远了。
在挑灯夜站数晚Rebuild n此之后Worldpress在VPS跑起来了，这简直就是奇迹！这得得意于Linode可以让
小白菜完全看懂的Document以及谷歌度娘的相助。素来听闻Linode的客服不错，于是，数次挑战客服，提交极其弱智的TK，
名不虚传，必有回应，响应速度很快！还协助我在TokyoheForement两个数据中心来回迁移数次（偷笑），最后选定后者。
这个VPS还大有用处。</p>

<blockquote><p>大概这个博客就这么的诞生的，其中各个部分我所遇到的问题以及解决的方法，抽空写出来记录在此。</p></blockquote>

<p>一个看似简单的博客，在接触之后才知道其后涉及到各个方面的问题。当然也可以有简单的方法来实现，
而我选择了比较原始也比较有挑战的方式。这两个多星期让我收获良多，从最开始单纯的想学PHP，
现在发现编程就是一种体系也是一种思想，学习何种语言都是次要的，重在领会其精髓之处，才可触类旁通。</p>

<blockquote><p>仅以此文纪念本博客的诞生!</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello world]]></title>
    <link href="http://junyfly.github.io/hello-world.html"/>
    <updated>2013-12-30T00:07:35+08:00</updated>
    <id>http://junyfly.github.io/hello-world</id>
    <content type="html"><![CDATA[<p><img src="http://farm3.staticflickr.com/2832/12009122516_5f7452855e_o.jpg" title="" ></p>

<h2>Hello world!</h2>
]]></content>
  </entry>
  
</feed>
